#    filters:
#      tags:
#        only: /^v.*/

version: 2
jobs:
  install:
    working_directory: ~/swanco
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - save_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/swanco
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules

  build:
    working_directory: ~/swanco
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Compile distributive
          command: npm run build

  doc:
    working_directory: ~/swanco
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Build API documentation
          command: npm run doc
      - store_artifacts:
          path: doc

  lint:
    working_directory: ~/swanco
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Execute linter
          command: npm run lint -- --format junit --out reports/lint.xml

  test:
    working_directory: ~/swanco
    docker:
      - image: circleci/node:latest
    steps:
      - restore_cache:
          key: repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Execute tests
          command: npm run test -- --ci --runInBand --reporters jest-junit
          environment:
            JEST_JUNIT_OUTPUT: reports/test.xml
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: reports

workflows:
  version: 2
  build:
    jobs:
      - install
      - build:
          requires:
            - install
      - doc:
          requires:
            - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
